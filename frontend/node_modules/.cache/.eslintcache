[{"/home/haresh/Desktop/services/frontend/src/index.js":"1","/home/haresh/Desktop/services/frontend/src/App.js":"2","/home/haresh/Desktop/services/frontend/src/pages/ProductDetail.js":"3","/home/haresh/Desktop/services/frontend/src/pages/customer/Login.js":"4","/home/haresh/Desktop/services/frontend/src/pages/Products.js":"5","/home/haresh/Desktop/services/frontend/src/pages/Cart.js":"6","/home/haresh/Desktop/services/frontend/src/pages/seller/Login.js":"7","/home/haresh/Desktop/services/frontend/src/pages/customer/Register.js":"8","/home/haresh/Desktop/services/frontend/src/pages/customer/Profile.js":"9","/home/haresh/Desktop/services/frontend/src/pages/seller/Register.js":"10","/home/haresh/Desktop/services/frontend/src/pages/seller/Dashboard.js":"11","/home/haresh/Desktop/services/frontend/src/pages/Home.js":"12","/home/haresh/Desktop/services/frontend/src/components/common/Header.js":"13","/home/haresh/Desktop/services/frontend/src/components/common/Footer.js":"14","/home/haresh/Desktop/services/frontend/src/pages/seller/AddProduct.js":"15","/home/haresh/Desktop/services/frontend/src/pages/seller/EditProduct.js":"16","/home/haresh/Desktop/services/frontend/src/components/common/ImageUploader.js":"17","/home/haresh/Desktop/services/frontend/src/components/common/MultiImageUploader.js":"18","/home/haresh/Desktop/services/frontend/src/components/seller/SellerLayout.js":"19","/home/haresh/Desktop/services/frontend/src/components/seller/SellerSidebar.js":"20","/home/haresh/Desktop/services/frontend/src/components/seller/SellerNavbar.js":"21","/home/haresh/Desktop/services/frontend/src/pages/seller/SellerApp.js":"22","/home/haresh/Desktop/services/frontend/src/pages/seller/ProductsList.js":"23","/home/haresh/Desktop/services/frontend/src/pages/seller/OrdersList.js":"24","/home/haresh/Desktop/services/frontend/src/pages/seller/Analytics.js":"25","/home/haresh/Desktop/services/frontend/src/pages/seller/Profile.js":"26","/home/haresh/Desktop/services/frontend/src/pages/seller/Settings.js":"27"},{"size":167,"mtime":1754658831635,"results":"28","hashOfConfig":"29"},{"size":1778,"mtime":1754720309805,"results":"30","hashOfConfig":"29"},{"size":6431,"mtime":1754671416686,"results":"31","hashOfConfig":"29"},{"size":3258,"mtime":1754659333088,"results":"32","hashOfConfig":"29"},{"size":8108,"mtime":1754671406545,"results":"33","hashOfConfig":"29"},{"size":7933,"mtime":1754659190031,"results":"34","hashOfConfig":"29"},{"size":3387,"mtime":1754662088367,"results":"35","hashOfConfig":"29"},{"size":6996,"mtime":1754659336766,"results":"36","hashOfConfig":"29"},{"size":6790,"mtime":1754659043555,"results":"37","hashOfConfig":"29"},{"size":7423,"mtime":1754661576104,"results":"38","hashOfConfig":"29"},{"size":7409,"mtime":1754720492654,"results":"39","hashOfConfig":"29"},{"size":4297,"mtime":1754671392861,"results":"40","hashOfConfig":"29"},{"size":2577,"mtime":1754658954648,"results":"41","hashOfConfig":"29"},{"size":1154,"mtime":1754658964119,"results":"42","hashOfConfig":"29"},{"size":12990,"mtime":1754720503434,"results":"43","hashOfConfig":"29"},{"size":17950,"mtime":1754720516224,"results":"44","hashOfConfig":"29"},{"size":6815,"mtime":1754662754078,"results":"45","hashOfConfig":"29"},{"size":4139,"mtime":1754667723585,"results":"46","hashOfConfig":"29"},{"size":1128,"mtime":1754720230790,"results":"47","hashOfConfig":"29"},{"size":1811,"mtime":1754720739876,"results":"48","hashOfConfig":"29"},{"size":1976,"mtime":1754720712007,"results":"49","hashOfConfig":"29"},{"size":2018,"mtime":1754720750351,"results":"50","hashOfConfig":"29"},{"size":7723,"mtime":1754720344557,"results":"51","hashOfConfig":"29"},{"size":8754,"mtime":1754720380200,"results":"52","hashOfConfig":"29"},{"size":6658,"mtime":1754720410782,"results":"53","hashOfConfig":"29"},{"size":7054,"mtime":1754720436795,"results":"54","hashOfConfig":"29"},{"size":9594,"mtime":1754720471208,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"whr16f",{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/haresh/Desktop/services/frontend/src/index.js",[],["114","115"],"/home/haresh/Desktop/services/frontend/src/App.js",[],"/home/haresh/Desktop/services/frontend/src/pages/ProductDetail.js",["116"],"import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, CardImg, CardBody, Button, Badge, Input, FormGroup, Label } from 'reactstrap';\nimport { useParams, useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst ProductDetail = () => {\n  const { id } = useParams();\n  const history = useHistory();\n  const [product, setProduct] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [quantity, setQuantity] = useState(1);\n  const [selectedImage, setSelectedImage] = useState(0);\n\n  useEffect(() => {\n    fetchProduct();\n  }, [id]);\n\n  const fetchProduct = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`/api/products/products/${id}`);\n      \n      if (response.data.success) {\n        setProduct(response.data.data);\n      } else {\n        toast.error('Product not found');\n        history.push('/products');\n      }\n    } catch (error) {\n      console.error('Error fetching product:', error);\n      toast.error('Failed to fetch product details');\n      history.push('/products');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const addToCart = () => {\n    if (!product) return;\n    \n    const cartItems = JSON.parse(localStorage.getItem('cartItems') || '[]');\n    const existingItem = cartItems.find(item => item._id === product._id);\n    \n    if (existingItem) {\n      existingItem.quantity += quantity;\n    } else {\n      cartItems.push({ ...product, quantity });\n    }\n    \n    localStorage.setItem('cartItems', JSON.stringify(cartItems));\n    toast.success(`${quantity} item(s) added to cart!`);\n  };\n\n  const handleQuantityChange = (e) => {\n    const value = parseInt(e.target.value);\n    if (value > 0 && value <= product.stock) {\n      setQuantity(value);\n    }\n  };\n\n  if (loading) {\n    return (\n      <Container className=\"py-5\">\n        <div className=\"loading-spinner\">\n          <div className=\"spinner-border text-primary\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>\n        </div>\n      </Container>\n    );\n  }\n\n  if (!product) {\n    return (\n      <Container className=\"py-5\">\n        <div className=\"text-center\">\n          <h3>Product not found</h3>\n          <Button color=\"primary\" onClick={() => history.push('/products')}>\n            Back to Products\n          </Button>\n        </div>\n      </Container>\n    );\n  }\n\n  return (\n    <Container className=\"py-4\">\n      <Row>\n        <Col md=\"6\">\n          <Card>\n            <CardBody>\n              {product.images && product.images.length > 0 ? (\n                <>\n                  <CardImg \n                    top \n                    src={product.images[selectedImage]} \n                    alt={product.name}\n                    style={{ height: '400px', objectFit: 'cover', marginBottom: '15px' }}\n                  />\n                  {product.images.length > 1 && (\n                    <Row>\n                      {product.images.map((image, index) => (\n                        <Col xs=\"3\" key={index}>\n                          <img\n                            src={image}\n                            alt={`${product.name} ${index + 1}`}\n                            style={{ \n                              width: '100%', \n                              height: '60px', \n                              objectFit: 'cover',\n                              cursor: 'pointer',\n                              border: selectedImage === index ? '2px solid #007bff' : '1px solid #ddd'\n                            }}\n                            onClick={() => setSelectedImage(index)}\n                          />\n                        </Col>\n                      ))}\n                    </Row>\n                  )}\n                </>\n              ) : (\n                <div \n                  className=\"d-flex align-items-center justify-content-center bg-light\"\n                  style={{ height: '400px' }}\n                >\n                  <span className=\"text-muted\">No image available</span>\n                </div>\n              )}\n            </CardBody>\n          </Card>\n        </Col>\n\n        <Col md=\"6\">\n          <div>\n            <h2>{product.name}</h2>\n            \n            <div className=\"mb-3\">\n              <Badge color=\"secondary\" className=\"mr-2\">\n                {product.category}\n              </Badge>\n              {product.stock > 0 ? (\n                <Badge color=\"success\">In Stock ({product.stock})</Badge>\n              ) : (\n                <Badge color=\"danger\">Out of Stock</Badge>\n              )}\n            </div>\n\n            <h3 className=\"text-primary mb-3\">${product.price}</h3>\n\n            <p className=\"mb-4\">{product.description}</p>\n\n            {product.specifications && (\n              <div className=\"mb-4\">\n                <h5>Specifications</h5>\n                <ul>\n                  {Object.entries(product.specifications).map(([key, value]) => (\n                    <li key={key}>\n                      <strong>{key}:</strong> {value}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )}\n\n            {product.stock > 0 && (\n              <div className=\"mb-4\">\n                <Row>\n                  <Col md=\"6\">\n                    <FormGroup>\n                      <Label for=\"quantity\">Quantity</Label>\n                      <Input\n                        type=\"number\"\n                        id=\"quantity\"\n                        min=\"1\"\n                        max={product.stock}\n                        value={quantity}\n                        onChange={handleQuantityChange}\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n                \n                <Button \n                  color=\"success\" \n                  size=\"lg\" \n                  block\n                  onClick={addToCart}\n                >\n                  Add to Cart\n                </Button>\n              </div>\n            )}\n\n            <div className=\"mt-4\">\n              <Button \n                color=\"secondary\" \n                outline\n                onClick={() => history.push('/products')}\n              >\n                Back to Products\n              </Button>\n            </div>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default ProductDetail;","/home/haresh/Desktop/services/frontend/src/pages/customer/Login.js",[],"/home/haresh/Desktop/services/frontend/src/pages/Products.js",["117"],"import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, CardImg, CardBody, CardTitle, CardText, Button, Input, FormGroup, Label } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst Products = () => {\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [search, setSearch] = useState('');\n  const [category, setCategory] = useState('');\n  const [sortBy, setSortBy] = useState('name');\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n\n  useEffect(() => {\n    fetchProducts();\n  }, [search, category, sortBy, page]);\n\n  const fetchProducts = async () => {\n    try {\n      setLoading(true);\n      const params = {\n        page,\n        limit: 12,\n        sort: sortBy,\n        ...(search && { search }),\n        ...(category && { category })\n      };\n\n      const response = await axios.get('/api/products/products', { params });\n      \n      if (response.data.success) {\n        setProducts(response.data.data.products || []);\n        setTotalPages(response.data.data.pagination?.pages || 1);\n      }\n    } catch (error) {\n      console.error('Error fetching products:', error);\n      toast.error('Failed to fetch products');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const addToCart = (product) => {\n    const cartItems = JSON.parse(localStorage.getItem('cartItems') || '[]');\n    const existingItem = cartItems.find(item => item._id === product._id);\n    \n    if (existingItem) {\n      existingItem.quantity += 1;\n    } else {\n      cartItems.push({ ...product, quantity: 1 });\n    }\n    \n    localStorage.setItem('cartItems', JSON.stringify(cartItems));\n    toast.success('Product added to cart!');\n  };\n\n  const handleSearchChange = (e) => {\n    setSearch(e.target.value);\n    setPage(1);\n  };\n\n  const handleCategoryChange = (e) => {\n    setCategory(e.target.value);\n    setPage(1);\n  };\n\n  const handleSortChange = (e) => {\n    setSortBy(e.target.value);\n    setPage(1);\n  };\n\n  return (\n    <Container className=\"py-4\">\n      <Row className=\"mb-4\">\n        <Col>\n          <h2>Products</h2>\n        </Col>\n      </Row>\n\n      <Row className=\"mb-4\">\n        <Col md=\"4\">\n          <FormGroup>\n            <Label for=\"search\">Search Products</Label>\n            <Input\n              type=\"text\"\n              id=\"search\"\n              placeholder=\"Search by name or description...\"\n              value={search}\n              onChange={handleSearchChange}\n            />\n          </FormGroup>\n        </Col>\n        <Col md=\"4\">\n          <FormGroup>\n            <Label for=\"category\">Category</Label>\n            <Input\n              type=\"select\"\n              id=\"category\"\n              value={category}\n              onChange={handleCategoryChange}\n            >\n              <option value=\"\">All Categories</option>\n              <option value=\"electronics\">Electronics</option>\n              <option value=\"clothing\">Clothing</option>\n              <option value=\"books\">Books</option>\n              <option value=\"home\">Home & Garden</option>\n              <option value=\"sports\">Sports</option>\n              <option value=\"beauty\">Beauty</option>\n            </Input>\n          </FormGroup>\n        </Col>\n        <Col md=\"4\">\n          <FormGroup>\n            <Label for=\"sort\">Sort By</Label>\n            <Input\n              type=\"select\"\n              id=\"sort\"\n              value={sortBy}\n              onChange={handleSortChange}\n            >\n              <option value=\"name\">Name</option>\n              <option value=\"price\">Price: Low to High</option>\n              <option value=\"-price\">Price: High to Low</option>\n              <option value=\"-createdAt\">Newest First</option>\n              <option value=\"createdAt\">Oldest First</option>\n            </Input>\n          </FormGroup>\n        </Col>\n      </Row>\n\n      {loading ? (\n        <div className=\"loading-spinner\">\n          <div className=\"spinner-border text-primary\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>\n        </div>\n      ) : (\n        <>\n          <Row>\n            {products.map(product => (\n              <Col md=\"4\" lg=\"3\" key={product._id} className=\"mb-4\">\n                <Card className=\"product-card h-100\">\n                  {product.images && product.images[0] && (\n                    <CardImg \n                      top \n                      width=\"100%\" \n                      src={product.images[0]} \n                      alt={product.name}\n                      style={{ height: '200px', objectFit: 'cover' }}\n                    />\n                  )}\n                  <CardBody className=\"d-flex flex-column\">\n                    <CardTitle tag=\"h6\">{product.name}</CardTitle>\n                    <CardText className=\"text-muted small\">\n                      {product.description?.substring(0, 100)}...\n                    </CardText>\n                    <CardText className=\"h6 text-primary\">\n                      ${product.price}\n                    </CardText>\n                    <CardText className=\"small text-muted\">\n                      Stock: {product.stock}\n                    </CardText>\n                    <div className=\"mt-auto\">\n                      <Button \n                        color=\"primary\" \n                        size=\"sm\" \n                        block\n                        tag={Link} \n                        to={`/product/${product._id}`}\n                        className=\"mb-2\"\n                      >\n                        View Details\n                      </Button>\n                      <Button \n                        color=\"success\" \n                        size=\"sm\" \n                        block\n                        onClick={() => addToCart(product)}\n                        disabled={product.stock === 0}\n                      >\n                        {product.stock === 0 ? 'Out of Stock' : 'Add to Cart'}\n                      </Button>\n                    </div>\n                  </CardBody>\n                </Card>\n              </Col>\n            ))}\n          </Row>\n\n          {products.length === 0 && (\n            <Row>\n              <Col className=\"text-center py-5\">\n                <p className=\"lead\">No products found.</p>\n              </Col>\n            </Row>\n          )}\n\n          {totalPages > 1 && (\n            <Row>\n              <Col className=\"d-flex justify-content-center\">\n                <nav>\n                  <ul className=\"pagination\">\n                    <li className={`page-item ${page === 1 ? 'disabled' : ''}`}>\n                      <Button \n                        color=\"link\" \n                        className=\"page-link\"\n                        onClick={() => setPage(page - 1)}\n                        disabled={page === 1}\n                      >\n                        Previous\n                      </Button>\n                    </li>\n                    {[...Array(totalPages)].map((_, i) => (\n                      <li key={i} className={`page-item ${page === i + 1 ? 'active' : ''}`}>\n                        <Button \n                          color=\"link\" \n                          className=\"page-link\"\n                          onClick={() => setPage(i + 1)}\n                        >\n                          {i + 1}\n                        </Button>\n                      </li>\n                    ))}\n                    <li className={`page-item ${page === totalPages ? 'disabled' : ''}`}>\n                      <Button \n                        color=\"link\" \n                        className=\"page-link\"\n                        onClick={() => setPage(page + 1)}\n                        disabled={page === totalPages}\n                      >\n                        Next\n                      </Button>\n                    </li>\n                  </ul>\n                </nav>\n              </Col>\n            </Row>\n          )}\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default Products;","/home/haresh/Desktop/services/frontend/src/pages/Cart.js",[],"/home/haresh/Desktop/services/frontend/src/pages/seller/Login.js",[],"/home/haresh/Desktop/services/frontend/src/pages/customer/Register.js",[],"/home/haresh/Desktop/services/frontend/src/pages/customer/Profile.js",["118","119"],"import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, CardBody, Form, FormGroup, Label, Input, Button, Alert } from 'reactstrap';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst CustomerProfile = () => {\n  const [customer, setCustomer] = useState(null);\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    dateOfBirth: '',\n    gender: 'male'\n  });\n  const [loading, setLoading] = useState(true);\n  const [updating, setUpdating] = useState(false);\n  const [error, setError] = useState('');\n  const history = useHistory();\n\n  useEffect(() => {\n    const token = localStorage.getItem('customerToken');\n    if (!token) {\n      history.push('/customer/login');\n      return;\n    }\n    fetchCustomerProfile();\n  }, [history]);\n\n  const fetchCustomerProfile = async () => {\n    try {\n      const token = localStorage.getItem('customerToken');\n      const response = await axios.get('/api/customer/profile', {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n\n      if (response.data.success) {\n        const customerData = response.data.data;\n        setCustomer(customerData);\n        setFormData({\n          firstName: customerData.firstName || '',\n          lastName: customerData.lastName || '',\n          email: customerData.email || '',\n          phone: customerData.phone || '',\n          dateOfBirth: customerData.dateOfBirth ? customerData.dateOfBirth.split('T')[0] : '',\n          gender: customerData.gender || 'male'\n        });\n      }\n    } catch (error) {\n      console.error('Error fetching profile:', error);\n      if (error.response?.status === 401) {\n        localStorage.removeItem('customerToken');\n        history.push('/customer/login');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n    if (error) setError('');\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setUpdating(true);\n    setError('');\n\n    try {\n      const token = localStorage.getItem('customerToken');\n      const response = await axios.put('/api/customer/profile', formData, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n\n      if (response.data.success) {\n        toast.success('Profile updated successfully!');\n        setCustomer(response.data.data);\n      }\n    } catch (error) {\n      const errorMessage = error.response?.data?.message || 'Failed to update profile.';\n      setError(errorMessage);\n      toast.error(errorMessage);\n    } finally {\n      setUpdating(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <Container className=\"py-5\">\n        <div className=\"loading-spinner\">\n          <div className=\"spinner-border text-primary\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>\n        </div>\n      </Container>\n    );\n  }\n\n  return (\n    <Container className=\"py-5\">\n      <Row className=\"justify-content-center\">\n        <Col md=\"8\">\n          <Card>\n            <CardBody>\n              <h2 className=\"text-center mb-4\">My Profile</h2>\n              {error && <Alert color=\"danger\">{error}</Alert>}\n              \n              <Form onSubmit={handleSubmit}>\n                <Row>\n                  <Col md=\"6\">\n                    <FormGroup>\n                      <Label for=\"firstName\">First Name</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"firstName\"\n                        id=\"firstName\"\n                        value={formData.firstName}\n                        onChange={handleChange}\n                        required\n                      />\n                    </FormGroup>\n                  </Col>\n                  <Col md=\"6\">\n                    <FormGroup>\n                      <Label for=\"lastName\">Last Name</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"lastName\"\n                        id=\"lastName\"\n                        value={formData.lastName}\n                        onChange={handleChange}\n                        required\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n                \n                <FormGroup>\n                  <Label for=\"email\">Email</Label>\n                  <Input\n                    type=\"email\"\n                    name=\"email\"\n                    id=\"email\"\n                    value={formData.email}\n                    onChange={handleChange}\n                    disabled\n                  />\n                </FormGroup>\n                \n                <Row>\n                  <Col md=\"6\">\n                    <FormGroup>\n                      <Label for=\"phone\">Phone</Label>\n                      <Input\n                        type=\"tel\"\n                        name=\"phone\"\n                        id=\"phone\"\n                        value={formData.phone}\n                        onChange={handleChange}\n                        required\n                      />\n                    </FormGroup>\n                  </Col>\n                  <Col md=\"6\">\n                    <FormGroup>\n                      <Label for=\"gender\">Gender</Label>\n                      <Input\n                        type=\"select\"\n                        name=\"gender\"\n                        id=\"gender\"\n                        value={formData.gender}\n                        onChange={handleChange}\n                      >\n                        <option value=\"male\">Male</option>\n                        <option value=\"female\">Female</option>\n                        <option value=\"other\">Other</option>\n                      </Input>\n                    </FormGroup>\n                  </Col>\n                </Row>\n                \n                <FormGroup>\n                  <Label for=\"dateOfBirth\">Date of Birth</Label>\n                  <Input\n                    type=\"date\"\n                    name=\"dateOfBirth\"\n                    id=\"dateOfBirth\"\n                    value={formData.dateOfBirth}\n                    onChange={handleChange}\n                    required\n                  />\n                </FormGroup>\n                \n                <Button \n                  color=\"primary\" \n                  type=\"submit\" \n                  block \n                  disabled={updating}\n                >\n                  {updating ? 'Updating...' : 'Update Profile'}\n                </Button>\n              </Form>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default CustomerProfile;","/home/haresh/Desktop/services/frontend/src/pages/seller/Register.js",[],"/home/haresh/Desktop/services/frontend/src/pages/seller/Dashboard.js",["120"],"/home/haresh/Desktop/services/frontend/src/pages/Home.js",[],"/home/haresh/Desktop/services/frontend/src/components/common/Header.js",[],"/home/haresh/Desktop/services/frontend/src/components/common/Footer.js",[],"/home/haresh/Desktop/services/frontend/src/pages/seller/AddProduct.js",[],"/home/haresh/Desktop/services/frontend/src/pages/seller/EditProduct.js",["121","122","123"],"/home/haresh/Desktop/services/frontend/src/components/common/ImageUploader.js",[],"/home/haresh/Desktop/services/frontend/src/components/common/MultiImageUploader.js",[],"/home/haresh/Desktop/services/frontend/src/components/seller/SellerLayout.js",[],"/home/haresh/Desktop/services/frontend/src/components/seller/SellerSidebar.js",[],"/home/haresh/Desktop/services/frontend/src/components/seller/SellerNavbar.js",[],"/home/haresh/Desktop/services/frontend/src/pages/seller/SellerApp.js",[],"/home/haresh/Desktop/services/frontend/src/pages/seller/ProductsList.js",[],"/home/haresh/Desktop/services/frontend/src/pages/seller/OrdersList.js",[],"/home/haresh/Desktop/services/frontend/src/pages/seller/Analytics.js",["124","125","126"],"/home/haresh/Desktop/services/frontend/src/pages/seller/Profile.js",["127"],"/home/haresh/Desktop/services/frontend/src/pages/seller/Settings.js",["128"],{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":17,"column":6,"nodeType":"135","endLine":17,"endColumn":10,"suggestions":"136"},{"ruleId":"133","severity":1,"message":"137","line":18,"column":6,"nodeType":"135","endLine":18,"endColumn":38,"suggestions":"138"},{"ruleId":"139","severity":1,"message":"140","line":8,"column":10,"nodeType":"141","messageId":"142","endLine":8,"endColumn":18},{"ruleId":"133","severity":1,"message":"143","line":29,"column":6,"nodeType":"135","endLine":29,"endColumn":15,"suggestions":"144"},{"ruleId":"133","severity":1,"message":"145","line":28,"column":6,"nodeType":"135","endLine":28,"endColumn":15,"suggestions":"146"},{"ruleId":"139","severity":1,"message":"147","line":27,"column":10,"nodeType":"141","messageId":"142","endLine":27,"endColumn":29},{"ruleId":"139","severity":1,"message":"148","line":28,"column":10,"nodeType":"141","messageId":"142","endLine":28,"endColumn":31},{"ruleId":"133","severity":1,"message":"134","line":35,"column":6,"nodeType":"135","endLine":35,"endColumn":17,"suggestions":"149"},{"ruleId":"139","severity":1,"message":"150","line":3,"column":8,"nodeType":"141","messageId":"142","endLine":3,"endColumn":13},{"ruleId":"139","severity":1,"message":"151","line":23,"column":13,"nodeType":"141","messageId":"142","endLine":23,"endColumn":18},{"ruleId":"139","severity":1,"message":"152","line":24,"column":13,"nodeType":"141","messageId":"142","endLine":24,"endColumn":21},{"ruleId":"139","severity":1,"message":"153","line":2,"column":75,"nodeType":"141","messageId":"142","endLine":2,"endColumn":80},{"ruleId":"139","severity":1,"message":"153","line":2,"column":86,"nodeType":"141","messageId":"142","endLine":2,"endColumn":91},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchProduct'. Either include it or remove the dependency array.","ArrayExpression",["156"],"React Hook useEffect has a missing dependency: 'fetchProducts'. Either include it or remove the dependency array.",["157"],"no-unused-vars","'customer' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'fetchCustomerProfile'. Either include it or remove the dependency array.",["158"],"React Hook useEffect has a missing dependency: 'fetchDashboardData'. Either include it or remove the dependency array.",["159"],"'originalMainImageId' is assigned a value but never used.","'originalOtherImageIds' is assigned a value but never used.",["160"],"'axios' is defined but never used.","'token' is assigned a value but never used.","'sellerId' is assigned a value but never used.","'Alert' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},"Update the dependencies array to be: [fetchProduct, id]",{"range":"171","text":"172"},"Update the dependencies array to be: [search, category, sortBy, page, fetchProducts]",{"range":"173","text":"174"},"Update the dependencies array to be: [fetchCustomerProfile, history]",{"range":"175","text":"176"},"Update the dependencies array to be: [fetchDashboardData, history]",{"range":"177","text":"178"},"Update the dependencies array to be: [fetchProduct, productId]",{"range":"179","text":"180"},[631,635],"[fetchProduct, id]",[688,720],"[search, category, sortBy, page, fetchProducts]",[880,889],"[fetchCustomerProfile, history]",[960,969],"[fetchDashboardData, history]",[1365,1376],"[fetchProduct, productId]"]