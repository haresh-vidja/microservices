2025-08-08T19:09:13: [0;36mMongoose:[0m sellers.createIndex({ email: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
2025-08-08T19:09:13: [0;36mMongoose:[0m roles.createIndex({ name: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
2025-08-08T19:09:13: [0;36mMongoose:[0m businesses.createIndex({ sellerId: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
2025-08-08T19:09:13: Sellers DB connected: localhost/sellers_db
2025-08-08T19:09:13: [32minfo[39m: Database connected successfully {"service":"sellers-service","timestamp":"2025-08-08 19:09:13"}
2025-08-08T19:09:13: [0;36mMongoose:[0m roles.findOne({ name: [32m'super-admin'[39m }, { projection: {} })
2025-08-08T19:09:13: [0;36mMongoose:[0m sellers.createIndex({ email: [33m1[39m }, { background: [33mtrue[39m })
2025-08-08T19:09:13: [0;36mMongoose:[0m sellers.createIndex({ phone: [33m1[39m }, { background: [33mtrue[39m })
2025-08-08T19:09:13: [0;36mMongoose:[0m roles.insertOne({ permissions: { [32m'manage-user'[39m: [33mtrue[39m, [32m'add-user'[39m: [33mtrue[39m, [32m'edit-user'[39m: [33mtrue[39m, [32m'delete-user'[39m: [33mtrue[39m, [32m'view-user'[39m: [33mtrue[39m, [32m'manage-product'[39m: [33mtrue[39m, [32m'add-product'[39m: [33mtrue[39m, [32m'edit-product'[39m: [33mtrue[39m, [32m'delete-product'[39m: [33mtrue[39m, [32m'view-product'[39m: [33mtrue[39m, [32m'manage-order'[39m: [33mtrue[39m, [32m'view-order'[39m: [33mtrue[39m, [32m'update-order-status'[39m: [33mtrue[39m, [32m'view-analytics'[39m: [33mtrue[39m, [32m'view-reports'[39m: [33mtrue[39m, [32m'export-data'[39m: [33mtrue[39m, [32m'manage-business'[39m: [33mtrue[39m, [32m'update-business-profile'[39m: [33mtrue[39m, [32m'upload-media'[39m: [33mtrue[39m, [32m'manage-media'[39m: [33mtrue[39m, [32m'manage-role'[39m: [33mtrue[39m, [32m'assign-role'[39m: [33mtrue[39m, [32m'manage-settings'[39m: [33mtrue[39m }, isActive: [33mtrue[39m, isDefault: [33mtrue[39m, _id: ObjectId("6895fe01fb1a3fac1e475027"), name: [32m'super-admin'[39m, description: [32m'Super administrator with all permissions'[39m, level: [33m100[39m, createdAt: new Date("Fri, 08 Aug 2025 13:39:13 GMT"), updatedAt: new Date("Fri, 08 Aug 2025 13:39:13 GMT")}, { session: [1mnull[22m })
2025-08-08T19:09:13: [0;36mMongoose:[0m businesses.createIndex({ taxId: [33m1[39m }, { sparse: [33mtrue[39m, background: [33mtrue[39m })
2025-08-08T19:09:13: [0;36mMongoose:[0m roles.createIndex({ name: [33m1[39m }, { background: [33mtrue[39m })
2025-08-08T19:09:13: [0;36mMongoose:[0m roles.createIndex({ level: [33m1[39m }, { background: [33mtrue[39m })
2025-08-08T19:09:13: [0;36mMongoose:[0m businesses.createIndex({ vatNumber: [33m1[39m }, { sparse: [33mtrue[39m, background: [33mtrue[39m })
2025-08-08T19:09:13: [0;36mMongoose:[0m sellers.createIndex({ businessName: [33m1[39m }, { background: [33mtrue[39m })
2025-08-08T19:09:13: [0;36mMongoose:[0m businesses.createIndex({ sellerId: [33m1[39m }, { background: [33mtrue[39m })
2025-08-08T19:09:13: [0;36mMongoose:[0m businesses.createIndex({ businessName: [33m1[39m }, { background: [33mtrue[39m })
2025-08-08T19:09:13: [0;36mMongoose:[0m roles.createIndex({ isActive: [33m1[39m }, { background: [33mtrue[39m })
2025-08-08T19:09:13: [0;36mMongoose:[0m roles.findOne({ name: [32m'admin'[39m }, { projection: {} })
2025-08-08T19:09:13: [0;36mMongoose:[0m roles.insertOne({ permissions: { [32m'manage-user'[39m: [33mtrue[39m, [32m'add-user'[39m: [33mtrue[39m, [32m'edit-user'[39m: [33mtrue[39m, [32m'delete-user'[39m: [33mfalse[39m, [32m'view-user'[39m: [33mtrue[39m, [32m'manage-product'[39m: [33mtrue[39m, [32m'add-product'[39m: [33mtrue[39m, [32m'edit-product'[39m: [33mtrue[39m, [32m'delete-product'[39m: [33mtrue[39m, [32m'view-product'[39m: [33mtrue[39m, [32m'manage-order'[39m: [33mtrue[39m, [32m'view-order'[39m: [33mtrue[39m, [32m'update-order-status'[39m: [33mtrue[39m, [32m'view-analytics'[39m: [33mtrue[39m, [32m'view-reports'[39m: [33mtrue[39m, [32m'export-data'[39m: [33mtrue[39m, [32m'manage-business'[39m: [33mtrue[39m, [32m'update-business-profile'[39m: [33mtrue[39m, [32m'upload-media'[39m: [33mtrue[39m, [32m'manage-media'[39m: [33mtrue[39m, [32m'manage-role'[39m: [33mfalse[39m, [32m'assign-role'[39m: [33mfalse[39m, [32m'manage-settings'[39m: [33mfalse[39m }, isActive: [33mtrue[39m, isDefault: [33mtrue[39m, _id: ObjectId("6895fe01fb1a3fac1e475032"), name: [32m'admin'[39m, description: [32m'Administrator with most permissions'[39m, level: [33m80[39m, createdAt: new Date("Fri, 08 Aug 2025 13:39:13 GMT"), updatedAt: new Date("Fri, 08 Aug 2025 13:39:13 GMT")}, { session: [1mnull[22m })
2025-08-08T19:09:13: [0;36mMongoose:[0m businesses.createIndex({ verificationStatus: [33m1[39m }, { background: [33mtrue[39m })
2025-08-08T19:09:13: [0;36mMongoose:[0m roles.findOne({ name: [32m'manager'[39m }, { projection: {} })
2025-08-08T19:09:13: [0;36mMongoose:[0m roles.insertOne({ permissions: { [32m'manage-user'[39m: [33mfalse[39m, [32m'add-user'[39m: [33mfalse[39m, [32m'edit-user'[39m: [33mfalse[39m, [32m'delete-user'[39m: [33mfalse[39m, [32m'view-user'[39m: [33mtrue[39m, [32m'manage-product'[39m: [33mtrue[39m, [32m'add-product'[39m: [33mtrue[39m, [32m'edit-product'[39m: [33mtrue[39m, [32m'delete-product'[39m: [33mfalse[39m, [32m'view-product'[39m: [33mtrue[39m, [32m'manage-order'[39m: [33mtrue[39m, [32m'view-order'[39m: [33mtrue[39m, [32m'update-order-status'[39m: [33mtrue[39m, [32m'view-analytics'[39m: [33mtrue[39m, [32m'view-reports'[39m: [33mtrue[39m, [32m'export-data'[39m: [33mfalse[39m, [32m'manage-business'[39m: [33mfalse[39m, [32m'update-business-profile'[39m: [33mtrue[39m, [32m'upload-media'[39m: [33mtrue[39m, [32m'manage-media'[39m: [33mtrue[39m, [32m'manage-role'[39m: [33mfalse[39m, [32m'assign-role'[39m: [33mfalse[39m, [32m'manage-settings'[39m: [33mfalse[39m }, isActive: [33mtrue[39m, isDefault: [33mtrue[39m, _id: ObjectId("6895fe01fb1a3fac1e475036"), name: [32m'manager'[39m, description: [32m'Manager with product and order management'[39m, level: [33m60[39m, createdAt: new Date("Fri, 08 Aug 2025 13:39:13 GMT"), updatedAt: new Date("Fri, 08 Aug 2025 13:39:13 GMT")}, { session: [1mnull[22m })
2025-08-08T19:09:13: [0;36mMongoose:[0m businesses.createIndex({ isActive: [33m1[39m }, { background: [33mtrue[39m })
2025-08-08T19:09:13: [0;36mMongoose:[0m sellers.createIndex({ role: [33m1[39m }, { background: [33mtrue[39m })
2025-08-08T19:09:13: [0;36mMongoose:[0m roles.findOne({ name: [32m'seller'[39m }, { projection: {} })
2025-08-08T19:09:13: [0;36mMongoose:[0m roles.insertOne({ permissions: { [32m'manage-user'[39m: [33mfalse[39m, [32m'add-user'[39m: [33mfalse[39m, [32m'edit-user'[39m: [33mfalse[39m, [32m'delete-user'[39m: [33mfalse[39m, [32m'view-user'[39m: [33mfalse[39m, [32m'manage-product'[39m: [33mfalse[39m, [32m'add-product'[39m: [33mtrue[39m, [32m'edit-product'[39m: [33mtrue[39m, [32m'delete-product'[39m: [33mfalse[39m, [32m'view-product'[39m: [33mtrue[39m, [32m'manage-order'[39m: [33mfalse[39m, [32m'view-order'[39m: [33mtrue[39m, [32m'update-order-status'[39m: [33mtrue[39m, [32m'view-analytics'[39m: [33mtrue[39m, [32m'view-reports'[39m: [33mfalse[39m, [32m'export-data'[39m: [33mfalse[39m, [32m'manage-business'[39m: [33mfalse[39m, [32m'update-business-profile'[39m: [33mtrue[39m, [32m'upload-media'[39m: [33mtrue[39m, [32m'manage-media'[39m: [33mfalse[39m, [32m'manage-role'[39m: [33mfalse[39m, [32m'assign-role'[39m: [33mfalse[39m, [32m'manage-settings'[39m: [33mfalse[39m }, isActive: [33mtrue[39m, isDefault: [33mtrue[39m, _id: ObjectId("6895fe01fb1a3fac1e47503b"), name: [32m'seller'[39m, description: [32m'Basic seller with limited permissions'[39m, level: [33m40[39m, createdAt: new Date("Fri, 08 Aug 2025 13:39:13 GMT"), updatedAt: new Date("Fri, 08 Aug 2025 13:39:13 GMT")}, { session: [1mnull[22m })
2025-08-08T19:09:13: [0;36mMongoose:[0m businesses.createIndex({ [32m'address.city'[39m: [33m1[39m }, { background: [33mtrue[39m })
2025-08-08T19:09:13: [32minfo[39m: Default roles initialized {"service":"sellers-service","timestamp":"2025-08-08 19:09:13"}
2025-08-08T19:09:13: [32minfo[39m: Sellers Service running on http://localhost:3002 {"service":"sellers-service","timestamp":"2025-08-08 19:09:13"}
2025-08-08T19:09:13: [32minfo[39m: Environment: development {"service":"sellers-service","timestamp":"2025-08-08 19:09:13"}
2025-08-08T19:09:13: [32minfo[39m: API Documentation: http://localhost:3002/api-docs {"service":"sellers-service","timestamp":"2025-08-08 19:09:13"}
2025-08-08T19:09:13: [0;36mMongoose:[0m businesses.createIndex({ [32m'address.state'[39m: [33m1[39m }, { background: [33mtrue[39m })
2025-08-08T19:09:13: [0;36mMongoose:[0m businesses.createIndex({ categories: [33m1[39m }, { background: [33mtrue[39m })
2025-08-08T19:09:13: [0;36mMongoose:[0m sellers.createIndex({ isActive: [33m1[39m }, { background: [33mtrue[39m })
2025-08-08T19:09:13: [0;36mMongoose:[0m sellers.createIndex({ createdAt: [33m-1[39m }, { background: [33mtrue[39m })
2025-08-08T19:15:21: [31merror[39m: request aborted {"ip":"127.0.0.1","method":"POST","service":"sellers-service","stack":"BadRequestError: request aborted\n    at IncomingMessage.onAborted (/home/haresh/Desktop/services/backend/sellers/node_modules/raw-body/index.js:245:10)\n    at IncomingMessage.emit (node:events:507:28)\n    at IncomingMessage._destroy (node:_http_incoming:221:10)\n    at _destroy (node:internal/streams/destroy:122:10)\n    at IncomingMessage.destroy (node:internal/streams/destroy:84:5)\n    at abortIncoming (node:_http_server:811:9)\n    at socketOnClose (node:_http_server:805:3)\n    at Socket.emit (node:events:519:35)\n    at TCP.<anonymous> (node:net:351:12)","timestamp":"2025-08-08 19:15:21","url":"/api/v1/signin","user":"anonymous"}
2025-08-08T19:15:52: [31merror[39m: request aborted {"ip":"127.0.0.1","method":"POST","service":"sellers-service","stack":"BadRequestError: request aborted\n    at IncomingMessage.onAborted (/home/haresh/Desktop/services/backend/sellers/node_modules/raw-body/index.js:245:10)\n    at IncomingMessage.emit (node:events:507:28)\n    at IncomingMessage._destroy (node:_http_incoming:221:10)\n    at _destroy (node:internal/streams/destroy:122:10)\n    at IncomingMessage.destroy (node:internal/streams/destroy:84:5)\n    at abortIncoming (node:_http_server:811:9)\n    at socketOnClose (node:_http_server:805:3)\n    at Socket.emit (node:events:519:35)\n    at TCP.<anonymous> (node:net:351:12)","timestamp":"2025-08-08 19:15:52","url":"/api/v1/signin","user":"anonymous"}
2025-08-08T19:16:35: [31merror[39m: request aborted {"ip":"127.0.0.1","method":"POST","service":"sellers-service","stack":"BadRequestError: request aborted\n    at IncomingMessage.onAborted (/home/haresh/Desktop/services/backend/sellers/node_modules/raw-body/index.js:245:10)\n    at IncomingMessage.emit (node:events:507:28)\n    at IncomingMessage._destroy (node:_http_incoming:221:10)\n    at _destroy (node:internal/streams/destroy:122:10)\n    at IncomingMessage.destroy (node:internal/streams/destroy:84:5)\n    at abortIncoming (node:_http_server:811:9)\n    at socketOnClose (node:_http_server:805:3)\n    at Socket.emit (node:events:519:35)\n    at TCP.<anonymous> (node:net:351:12)","timestamp":"2025-08-08 19:16:35","url":"/api/v1/signin","user":"anonymous"}
2025-08-08T19:16:55: [31merror[39m: request aborted {"ip":"127.0.0.1","method":"POST","service":"sellers-service","stack":"BadRequestError: request aborted\n    at IncomingMessage.onAborted (/home/haresh/Desktop/services/backend/sellers/node_modules/raw-body/index.js:245:10)\n    at IncomingMessage.emit (node:events:507:28)\n    at IncomingMessage._destroy (node:_http_incoming:221:10)\n    at _destroy (node:internal/streams/destroy:122:10)\n    at IncomingMessage.destroy (node:internal/streams/destroy:84:5)\n    at abortIncoming (node:_http_server:811:9)\n    at socketOnClose (node:_http_server:805:3)\n    at Socket.emit (node:events:519:35)\n    at TCP.<anonymous> (node:net:351:12)","timestamp":"2025-08-08 19:16:55","url":"/api/v1/signin","user":"anonymous"}
2025-08-08T19:17:27: [31merror[39m: request aborted {"method":"POST","service":"sellers-service","stack":"BadRequestError: request aborted\n    at IncomingMessage.onAborted (/home/haresh/Desktop/services/backend/sellers/node_modules/raw-body/index.js:245:10)\n    at IncomingMessage.emit (node:events:507:28)\n    at IncomingMessage._destroy (node:_http_incoming:221:10)\n    at _destroy (node:internal/streams/destroy:122:10)\n    at IncomingMessage.destroy (node:internal/streams/destroy:84:5)\n    at abortIncoming (node:_http_server:811:9)\n    at socketOnClose (node:_http_server:805:3)\n    at Socket.emit (node:events:519:35)\n    at TCP.<anonymous> (node:net:351:12)","timestamp":"2025-08-08 19:17:27","url":"/api/v1/signin","user":"anonymous"}
2025-08-08T19:19:53: [32minfo[39m: POST /api/v1/signin - 127.0.0.1 {"service":"sellers-service","timestamp":"2025-08-08 19:19:53"}
2025-08-08T19:19:53: [31merror[39m: Not Found - /api/v1/signin {"ip":"127.0.0.1","method":"POST","service":"sellers-service","stack":"Error: Not Found - /api/v1/signin\n    at notFound (/home/haresh/Desktop/services/backend/sellers/middleware/errorHandler.js:15:17)\n    at Layer.handle [as handle_request] (/home/haresh/Desktop/services/backend/sellers/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/home/haresh/Desktop/services/backend/sellers/node_modules/express/lib/router/index.js:328:13)\n    at /home/haresh/Desktop/services/backend/sellers/node_modules/express/lib/router/index.js:286:9\n    at router.process_params (/home/haresh/Desktop/services/backend/sellers/node_modules/express/lib/router/index.js:346:12)\n    at next (/home/haresh/Desktop/services/backend/sellers/node_modules/express/lib/router/index.js:280:10)\n    at /home/haresh/Desktop/services/backend/sellers/app.js:84:3\n    at Layer.handle [as handle_request] (/home/haresh/Desktop/services/backend/sellers/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/home/haresh/Desktop/services/backend/sellers/node_modules/express/lib/router/index.js:328:13)\n    at /home/haresh/Desktop/services/backend/sellers/node_modules/express/lib/router/index.js:286:9\n    at router.process_params (/home/haresh/Desktop/services/backend/sellers/node_modules/express/lib/router/index.js:346:12)\n    at next (/home/haresh/Desktop/services/backend/sellers/node_modules/express/lib/router/index.js:280:10)\n    at /home/haresh/Desktop/services/backend/sellers/node_modules/express-rate-limit/lib/express-rate-limit.js:170:15\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-08-08 19:19:53","url":"/api/v1/signin","user":"anonymous"}
2025-08-08T19:20:14: [32minfo[39m: POST /api/v1/sellers/signin - 127.0.0.1 {"service":"sellers-service","timestamp":"2025-08-08 19:20:14"}
2025-08-08T19:20:14: [0;36mMongoose:[0m sellers.findOne({ email: [32m'alex.tech@example.com'[39m }, { projection: { verificationToken: [33m0[39m, refreshToken: [33m0[39m, passwordResetToken: [33m0[39m, passwordResetExpires: [33m0[39m }})
2025-08-08T19:20:14: [0;36mMongoose:[0m sellers.updateOne({ _id: ObjectId("6895fc2fc8976794b14a5fce") }, { [32m'$setOnInsert'[39m: { createdAt: new Date("Fri, 08 Aug 2025 13:50:14 GMT") }, [32m'$unset'[39m: { lockUntil: [33m1[39m }, [32m'$set'[39m: { loginAttempts: [33m0[39m, lastLogin: new Date("Fri, 08 Aug 2025 13:50:14 GMT"), updatedAt: new Date("Fri, 08 Aug 2025 13:50:14 GMT") }}, {})
2025-08-08T19:20:14: [31merror[39m: Error in seller signin: Seller validation failed: role: Role is required {"_message":"Seller validation failed","errors":{"role":{"kind":"required","message":"Role is required","name":"ValidatorError","path":"role","properties":{"message":"Role is required","path":"role","type":"required"}}},"service":"sellers-service","stack":"ValidationError: Seller validation failed: role: Role is required\n    at Document.invalidate (/home/haresh/Desktop/services/backend/sellers/node_modules/mongoose/lib/document.js:2788:32)\n    at /home/haresh/Desktop/services/backend/sellers/node_modules/mongoose/lib/document.js:2580:17\n    at /home/haresh/Desktop/services/backend/sellers/node_modules/mongoose/lib/schematype.js:1273:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:85:11)","timestamp":"2025-08-08 19:20:14"}
2025-08-08T19:20:14: [31merror[39m: Seller validation failed: role: Role is required {"ip":"127.0.0.1","method":"POST","service":"sellers-service","stack":"ValidationError: Seller validation failed: role: Role is required\n    at Document.invalidate (/home/haresh/Desktop/services/backend/sellers/node_modules/mongoose/lib/document.js:2788:32)\n    at /home/haresh/Desktop/services/backend/sellers/node_modules/mongoose/lib/document.js:2580:17\n    at /home/haresh/Desktop/services/backend/sellers/node_modules/mongoose/lib/schematype.js:1273:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:85:11)","timestamp":"2025-08-08 19:20:14","url":"/api/v1/sellers/signin","user":"anonymous"}
2025-08-08T19:21:49: [0;36mMongoose:[0m sellers.createIndex({ email: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
2025-08-08T19:21:49: [0;36mMongoose:[0m roles.createIndex({ name: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
2025-08-08T19:21:49: [0;36mMongoose:[0m businesses.createIndex({ sellerId: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
2025-08-08T19:21:49: Sellers DB connected: localhost/sellers_db
2025-08-08T19:21:49: [32minfo[39m: Database connected successfully {"service":"sellers-service","timestamp":"2025-08-08 19:21:49"}
2025-08-08T19:21:49: [0;36mMongoose:[0m roles.findOne({ name: [32m'super-admin'[39m }, { projection: {} })
2025-08-08T19:21:49: [0;36mMongoose:[0m sellers.createIndex({ email: [33m1[39m }, { background: [33mtrue[39m })
2025-08-08T19:21:49: [0;36mMongoose:[0m roles.createIndex({ name: [33m1[39m }, { background: [33mtrue[39m })
2025-08-08T19:21:49: [0;36mMongoose:[0m sellers.createIndex({ phone: [33m1[39m }, { background: [33mtrue[39m })
2025-08-08T19:21:49: [0;36mMongoose:[0m businesses.createIndex({ taxId: [33m1[39m }, { sparse: [33mtrue[39m, background: [33mtrue[39m })
2025-08-08T19:21:49: [0;36mMongoose:[0m roles.findOne({ name: [32m'admin'[39m }, { projection: {} })
2025-08-08T19:21:49: [0;36mMongoose:[0m sellers.createIndex({ businessName: [33m1[39m }, { background: [33mtrue[39m })
2025-08-08T19:21:49: [0;36mMongoose:[0m businesses.createIndex({ vatNumber: [33m1[39m }, { sparse: [33mtrue[39m, background: [33mtrue[39m })
2025-08-08T19:21:49: [0;36mMongoose:[0m roles.createIndex({ level: [33m1[39m }, { background: [33mtrue[39m })
2025-08-08T19:21:49: [0;36mMongoose:[0m sellers.createIndex({ role: [33m1[39m }, { background: [33mtrue[39m })
2025-08-08T19:21:49: [0;36mMongoose:[0m businesses.createIndex({ sellerId: [33m1[39m }, { background: [33mtrue[39m })
2025-08-08T19:21:49: [0;36mMongoose:[0m roles.createIndex({ isActive: [33m1[39m }, { background: [33mtrue[39m })
2025-08-08T19:21:49: [0;36mMongoose:[0m roles.findOne({ name: [32m'manager'[39m }, { projection: {} })
2025-08-08T19:21:49: [0;36mMongoose:[0m sellers.createIndex({ isActive: [33m1[39m }, { background: [33mtrue[39m })
2025-08-08T19:21:49: [0;36mMongoose:[0m businesses.createIndex({ businessName: [33m1[39m }, { background: [33mtrue[39m })
2025-08-08T19:21:49: [0;36mMongoose:[0m businesses.createIndex({ verificationStatus: [33m1[39m }, { background: [33mtrue[39m })
2025-08-08T19:21:49: [0;36mMongoose:[0m sellers.createIndex({ createdAt: [33m-1[39m }, { background: [33mtrue[39m })
2025-08-08T19:21:49: [0;36mMongoose:[0m roles.findOne({ name: [32m'seller'[39m }, { projection: {} })
2025-08-08T19:21:49: [0;36mMongoose:[0m businesses.createIndex({ isActive: [33m1[39m }, { background: [33mtrue[39m })
2025-08-08T19:21:49: [0;36mMongoose:[0m businesses.createIndex({ [32m'address.city'[39m: [33m1[39m }, { background: [33mtrue[39m })
2025-08-08T19:21:49: [32minfo[39m: Default roles initialized {"service":"sellers-service","timestamp":"2025-08-08 19:21:49"}
2025-08-08T19:21:49: [0;36mMongoose:[0m businesses.createIndex({ [32m'address.state'[39m: [33m1[39m }, { background: [33mtrue[39m })
2025-08-08T19:21:49: [32minfo[39m: Sellers Service running on http://localhost:3002 {"service":"sellers-service","timestamp":"2025-08-08 19:21:49"}
2025-08-08T19:21:49: [32minfo[39m: Environment: development {"service":"sellers-service","timestamp":"2025-08-08 19:21:49"}
2025-08-08T19:21:49: [32minfo[39m: API Documentation: http://localhost:3002/api-docs {"service":"sellers-service","timestamp":"2025-08-08 19:21:49"}
2025-08-08T19:21:49: [0;36mMongoose:[0m businesses.createIndex({ categories: [33m1[39m }, { background: [33mtrue[39m })
2025-08-08T19:21:58: [32minfo[39m: POST /api/v1/sellers/signin - 127.0.0.1 {"service":"sellers-service","timestamp":"2025-08-08 19:21:58"}
2025-08-08T19:21:58: [0;36mMongoose:[0m sellers.findOne({ email: [32m'alex.tech@example.com'[39m }, { projection: { verificationToken: [33m0[39m, refreshToken: [33m0[39m, passwordResetToken: [33m0[39m, passwordResetExpires: [33m0[39m }})
2025-08-08T19:21:58: [0;36mMongoose:[0m sellers.updateOne({ _id: ObjectId("6895fc2fc8976794b14a5fce") }, { [32m'$setOnInsert'[39m: { createdAt: new Date("Fri, 08 Aug 2025 13:51:58 GMT") }, [32m'$unset'[39m: { lockUntil: [33m1[39m }, [32m'$set'[39m: { loginAttempts: [33m0[39m, lastLogin: new Date("Fri, 08 Aug 2025 13:51:58 GMT"), updatedAt: new Date("Fri, 08 Aug 2025 13:51:58 GMT") }}, {})
2025-08-08T19:21:58: [0;36mMongoose:[0m sellers.updateOne({ _id: ObjectId("6895fc2fc8976794b14a5fce") }, { [32m'$set'[39m: { businessDocuments: [], rating: [33m0[39m, refreshToken: [32m'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4OTVmYzJmYzg5NzY3OTRiMTRhNWZjZSIsInR5cGUiOiJyZWZyZXNoIiwiaWF0IjoxNzU0NjYxMTE4LCJleHAiOjE3NTUyNjU5MTh9.EZOBIrRWOC1sWIEY31Lo19SG4mc6FGpas8RfF9_uqq8'[39m, totalProducts: [33m0[39m, totalSales: [33m0[39m, updatedAt: new Date("Fri, 08 Aug 2025 13:51:58 GMT") }}, { session: [1mnull[22m })
2025-08-08T19:21:58: [32minfo[39m: Seller logged in: alex.tech@example.com {"service":"sellers-service","timestamp":"2025-08-08 19:21:58"}
2025-08-08T19:22:21: [32minfo[39m: GET /api/v1/health - 127.0.0.1 {"service":"sellers-service","timestamp":"2025-08-08 19:22:21"}
2025-08-08T19:22:21: [31merror[39m: Not Found - /api/v1/health {"ip":"127.0.0.1","method":"GET","service":"sellers-service","stack":"Error: Not Found - /api/v1/health\n    at notFound (/home/haresh/Desktop/services/backend/sellers/middleware/errorHandler.js:15:17)\n    at Layer.handle [as handle_request] (/home/haresh/Desktop/services/backend/sellers/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/home/haresh/Desktop/services/backend/sellers/node_modules/express/lib/router/index.js:328:13)\n    at /home/haresh/Desktop/services/backend/sellers/node_modules/express/lib/router/index.js:286:9\n    at router.process_params (/home/haresh/Desktop/services/backend/sellers/node_modules/express/lib/router/index.js:346:12)\n    at next (/home/haresh/Desktop/services/backend/sellers/node_modules/express/lib/router/index.js:280:10)\n    at /home/haresh/Desktop/services/backend/sellers/app.js:84:3\n    at Layer.handle [as handle_request] (/home/haresh/Desktop/services/backend/sellers/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/home/haresh/Desktop/services/backend/sellers/node_modules/express/lib/router/index.js:328:13)\n    at /home/haresh/Desktop/services/backend/sellers/node_modules/express/lib/router/index.js:286:9\n    at router.process_params (/home/haresh/Desktop/services/backend/sellers/node_modules/express/lib/router/index.js:346:12)\n    at next (/home/haresh/Desktop/services/backend/sellers/node_modules/express/lib/router/index.js:280:10)\n    at /home/haresh/Desktop/services/backend/sellers/node_modules/express-rate-limit/lib/express-rate-limit.js:170:15\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-08-08 19:22:21","url":"/api/v1/health","user":"anonymous"}
2025-08-08T19:22:26: [32minfo[39m: GET /health - 127.0.0.1 {"service":"sellers-service","timestamp":"2025-08-08 19:22:26"}
2025-08-08T19:22:32: [31merror[39m: request aborted {"method":"POST","service":"sellers-service","stack":"BadRequestError: request aborted\n    at IncomingMessage.onAborted (/home/haresh/Desktop/services/backend/sellers/node_modules/raw-body/index.js:245:10)\n    at IncomingMessage.emit (node:events:507:28)\n    at IncomingMessage._destroy (node:_http_incoming:221:10)\n    at _destroy (node:internal/streams/destroy:122:10)\n    at IncomingMessage.destroy (node:internal/streams/destroy:84:5)\n    at abortIncoming (node:_http_server:811:9)\n    at socketOnClose (node:_http_server:805:3)\n    at Socket.emit (node:events:519:35)\n    at TCP.<anonymous> (node:net:351:12)","timestamp":"2025-08-08 19:22:32","url":"/api/v1/signin","user":"anonymous"}
2025-08-08T19:28:14: [31merror[39m: request aborted {"ip":"127.0.0.1","method":"POST","service":"sellers-service","stack":"BadRequestError: request aborted\n    at IncomingMessage.onAborted (/home/haresh/Desktop/services/backend/sellers/node_modules/raw-body/index.js:245:10)\n    at IncomingMessage.emit (node:events:507:28)\n    at IncomingMessage._destroy (node:_http_incoming:221:10)\n    at _destroy (node:internal/streams/destroy:122:10)\n    at IncomingMessage.destroy (node:internal/streams/destroy:84:5)\n    at abortIncoming (node:_http_server:811:9)\n    at socketOnClose (node:_http_server:805:3)\n    at Socket.emit (node:events:519:35)\n    at TCP.<anonymous> (node:net:351:12)","timestamp":"2025-08-08 19:28:14","url":"/api/v1/signin","user":"anonymous"}
2025-08-08T19:28:27: [31merror[39m: request aborted {"ip":"127.0.0.1","method":"POST","service":"sellers-service","stack":"BadRequestError: request aborted\n    at IncomingMessage.onAborted (/home/haresh/Desktop/services/backend/sellers/node_modules/raw-body/index.js:245:10)\n    at IncomingMessage.emit (node:events:507:28)\n    at IncomingMessage._destroy (node:_http_incoming:221:10)\n    at _destroy (node:internal/streams/destroy:122:10)\n    at IncomingMessage.destroy (node:internal/streams/destroy:84:5)\n    at abortIncoming (node:_http_server:811:9)\n    at socketOnClose (node:_http_server:805:3)\n    at Socket.emit (node:events:519:35)\n    at TCP.<anonymous> (node:net:351:12)","timestamp":"2025-08-08 19:28:27","url":"/api/v1/signin","user":"anonymous"}
2025-08-08T19:29:19: [31merror[39m: request aborted {"ip":"127.0.0.1","method":"POST","service":"sellers-service","stack":"BadRequestError: request aborted\n    at IncomingMessage.onAborted (/home/haresh/Desktop/services/backend/sellers/node_modules/raw-body/index.js:245:10)\n    at IncomingMessage.emit (node:events:507:28)\n    at IncomingMessage._destroy (node:_http_incoming:221:10)\n    at _destroy (node:internal/streams/destroy:122:10)\n    at IncomingMessage.destroy (node:internal/streams/destroy:84:5)\n    at abortIncoming (node:_http_server:811:9)\n    at socketOnClose (node:_http_server:805:3)\n    at Socket.emit (node:events:519:35)\n    at TCP.<anonymous> (node:net:351:12)","timestamp":"2025-08-08 19:29:19","url":"/api/v1/signin","user":"anonymous"}
2025-08-08T19:29:44: [0;36mMongoose:[0m sellers.createIndex({ email: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
2025-08-08T19:29:44: [0;36mMongoose:[0m roles.createIndex({ name: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
2025-08-08T19:29:44: [0;36mMongoose:[0m businesses.createIndex({ sellerId: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
2025-08-08T19:29:44: Sellers DB connected: localhost/sellers_db
2025-08-08T19:29:44: [32minfo[39m: Database connected successfully {"service":"sellers-service","timestamp":"2025-08-08 19:29:44"}
2025-08-08T19:29:44: [0;36mMongoose:[0m roles.findOne({ name: [32m'super-admin'[39m }, { projection: {} })
2025-08-08T19:29:44: [0;36mMongoose:[0m sellers.createIndex({ email: [33m1[39m }, { background: [33mtrue[39m })
2025-08-08T19:29:44: [0;36mMongoose:[0m roles.createIndex({ name: [33m1[39m }, { background: [33mtrue[39m })
2025-08-08T19:29:44: [0;36mMongoose:[0m sellers.createIndex({ phone: [33m1[39m }, { background: [33mtrue[39m })
2025-08-08T19:29:44: [0;36mMongoose:[0m businesses.createIndex({ taxId: [33m1[39m }, { sparse: [33mtrue[39m, background: [33mtrue[39m })
2025-08-08T19:29:44: [0;36mMongoose:[0m roles.findOne({ name: [32m'admin'[39m }, { projection: {} })
2025-08-08T19:29:44: [0;36mMongoose:[0m sellers.createIndex({ businessName: [33m1[39m }, { background: [33mtrue[39m })
2025-08-08T19:29:44: [0;36mMongoose:[0m businesses.createIndex({ vatNumber: [33m1[39m }, { sparse: [33mtrue[39m, background: [33mtrue[39m })
2025-08-08T19:29:44: [0;36mMongoose:[0m roles.createIndex({ level: [33m1[39m }, { background: [33mtrue[39m })
2025-08-08T19:29:44: [0;36mMongoose:[0m sellers.createIndex({ role: [33m1[39m }, { background: [33mtrue[39m })
2025-08-08T19:29:44: [0;36mMongoose:[0m businesses.createIndex({ sellerId: [33m1[39m }, { background: [33mtrue[39m })
2025-08-08T19:29:44: [0;36mMongoose:[0m roles.createIndex({ isActive: [33m1[39m }, { background: [33mtrue[39m })
2025-08-08T19:29:44: [0;36mMongoose:[0m roles.findOne({ name: [32m'manager'[39m }, { projection: {} })
2025-08-08T19:29:44: [0;36mMongoose:[0m sellers.createIndex({ isActive: [33m1[39m }, { background: [33mtrue[39m })
2025-08-08T19:29:44: [0;36mMongoose:[0m businesses.createIndex({ businessName: [33m1[39m }, { background: [33mtrue[39m })
2025-08-08T19:29:44: [0;36mMongoose:[0m businesses.createIndex({ verificationStatus: [33m1[39m }, { background: [33mtrue[39m })
2025-08-08T19:29:44: [0;36mMongoose:[0m sellers.createIndex({ createdAt: [33m-1[39m }, { background: [33mtrue[39m })
2025-08-08T19:29:44: [0;36mMongoose:[0m roles.findOne({ name: [32m'seller'[39m }, { projection: {} })
2025-08-08T19:29:44: [0;36mMongoose:[0m businesses.createIndex({ isActive: [33m1[39m }, { background: [33mtrue[39m })
2025-08-08T19:29:44: [32minfo[39m: Default roles initialized {"service":"sellers-service","timestamp":"2025-08-08 19:29:44"}
2025-08-08T19:29:44: [0;36mMongoose:[0m businesses.createIndex({ [32m'address.city'[39m: [33m1[39m }, { background: [33mtrue[39m })
2025-08-08T19:29:44: [32minfo[39m: Sellers Service running on http://localhost:3002 {"service":"sellers-service","timestamp":"2025-08-08 19:29:44"}
2025-08-08T19:29:44: [32minfo[39m: Environment: development {"service":"sellers-service","timestamp":"2025-08-08 19:29:44"}
2025-08-08T19:29:44: [32minfo[39m: API Documentation: http://localhost:3002/api-docs {"service":"sellers-service","timestamp":"2025-08-08 19:29:44"}
2025-08-08T19:29:44: [0;36mMongoose:[0m businesses.createIndex({ [32m'address.state'[39m: [33m1[39m }, { background: [33mtrue[39m })
2025-08-08T19:29:44: [0;36mMongoose:[0m businesses.createIndex({ categories: [33m1[39m }, { background: [33mtrue[39m })
2025-08-08T19:30:00: [32minfo[39m: POST /api/v1/sellers/signin - 127.0.0.1 {"service":"sellers-service","timestamp":"2025-08-08 19:30:00"}
2025-08-08T19:30:00: [0;36mMongoose:[0m sellers.findOne({ email: [32m'alex.tech@example.com'[39m }, { projection: { verificationToken: [33m0[39m, refreshToken: [33m0[39m, passwordResetToken: [33m0[39m, passwordResetExpires: [33m0[39m }})
2025-08-08T19:30:00: [0;36mMongoose:[0m sellers.updateOne({ _id: ObjectId("6895fc2fc8976794b14a5fce") }, { [32m'$setOnInsert'[39m: { createdAt: new Date("Fri, 08 Aug 2025 14:00:00 GMT") }, [32m'$unset'[39m: { lockUntil: [33m1[39m }, [32m'$set'[39m: { loginAttempts: [33m0[39m, lastLogin: new Date("Fri, 08 Aug 2025 14:00:00 GMT"), updatedAt: new Date("Fri, 08 Aug 2025 14:00:00 GMT") }}, {})
2025-08-08T19:30:00: [0;36mMongoose:[0m sellers.updateOne({ _id: ObjectId("6895fc2fc8976794b14a5fce") }, { [32m'$set'[39m: { refreshToken: [32m'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4OTVmYzJmYzg5NzY3OTRiMTRhNWZjZSIsInR5cGUiOiJyZWZyZXNoIiwiaWF0IjoxNzU0NjYxNjAwLCJleHAiOjE3NTUyNjY0MDB9.e_kqWWFSEeHaU5nuN04WPKI7hrP2t3ypXKxfyZiXTOE'[39m, updatedAt: new Date("Fri, 08 Aug 2025 14:00:00 GMT") }}, { session: [1mnull[22m })
2025-08-08T19:30:00: [32minfo[39m: Seller logged in: alex.tech@example.com {"service":"sellers-service","timestamp":"2025-08-08 19:30:00"}
2025-08-08T19:31:48: [32minfo[39m: POST /api/v1/sellers/signin - 127.0.0.1 {"service":"sellers-service","timestamp":"2025-08-08 19:31:48"}
2025-08-08T19:31:48: [0;36mMongoose:[0m sellers.findOne({ email: [32m'alex.tech@example.com'[39m }, { projection: { verificationToken: [33m0[39m, refreshToken: [33m0[39m, passwordResetToken: [33m0[39m, passwordResetExpires: [33m0[39m }})
2025-08-08T19:31:48: [0;36mMongoose:[0m sellers.updateOne({ _id: ObjectId("6895fc2fc8976794b14a5fce") }, { [32m'$setOnInsert'[39m: { createdAt: new Date("Fri, 08 Aug 2025 14:01:48 GMT") }, [32m'$unset'[39m: { lockUntil: [33m1[39m }, [32m'$set'[39m: { loginAttempts: [33m0[39m, lastLogin: new Date("Fri, 08 Aug 2025 14:01:48 GMT"), updatedAt: new Date("Fri, 08 Aug 2025 14:01:48 GMT") }}, {})
2025-08-08T19:31:48: [0;36mMongoose:[0m sellers.updateOne({ _id: ObjectId("6895fc2fc8976794b14a5fce") }, { [32m'$set'[39m: { refreshToken: [32m'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4OTVmYzJmYzg5NzY3OTRiMTRhNWZjZSIsInR5cGUiOiJyZWZyZXNoIiwiaWF0IjoxNzU0NjYxNzA4LCJleHAiOjE3NTUyNjY1MDh9.3zEpHtk0bXhyPRpRZzhY1zgnNja3vfKzx9g6g7rZa4A'[39m, updatedAt: new Date("Fri, 08 Aug 2025 14:01:48 GMT") }}, { session: [1mnull[22m })
2025-08-08T19:31:48: [32minfo[39m: Seller logged in: alex.tech@example.com {"service":"sellers-service","timestamp":"2025-08-08 19:31:48"}
2025-08-08T19:31:48: [32minfo[39m: GET /api/v1/sellers/profile - 127.0.0.1 {"service":"sellers-service","timestamp":"2025-08-08 19:31:48"}
2025-08-08T19:31:48: [0;36mMongoose:[0m sellers.findOne({ _id: ObjectId("6895fc2fc8976794b14a5fce") }, { projection: { email: [33m1[39m, isActive: [33m1[39m, role: [33m1[39m } })
